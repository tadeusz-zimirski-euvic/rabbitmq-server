load("@rules_erlang//:xref.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze")
load(
    "//:rabbitmq.bzl",
    "assert_suites",
    "rabbitmq_app",
    "rabbitmq_suite",
)

py_binary(
    name = "codegen",
    srcs = [
        "codegen.py",
    ],
    imports = ["../../deps/rabbitmq_codegen"],
    deps = [
        "//deps/rabbitmq_codegen:amqp_codegen",
    ],
)

AMQP_SPEC_1_0 = [
    "//deps/rabbitmq_codegen:amqp-1.0/messaging.xml",
    "//deps/rabbitmq_codegen:amqp-1.0/security.xml",
    "//deps/rabbitmq_codegen:amqp-1.0/transport.xml",
    "//deps/rabbitmq_codegen:amqp-1.0/transactions.xml",
]

genrule(
    name = "generated_headers",
    srcs = AMQP_SPEC_1_0,
    outs = ["include/amqp10_framing.hrl"],
    cmd = "$(location :codegen) hrl $(SRCS) > $@",
    tools = [":codegen"],
)

genrule(
    name = "generated_sources",
    srcs = AMQP_SPEC_1_0,
    outs = ["src/amqp10_framing0.erl"],
    cmd = "$(location :codegen) erl $(SRCS) > $@",
    tools = [":codegen"],
)

APP_EXTRA_KEYS = """%% Hex.pm package informations.
    {licenses, ["MPL-2.0"]},
    {links, [
        {"Website", "https://www.rabbitmq.com/"},
        {"GitHub", "https://github.com/rabbitmq/rabbitmq-server/deps/amqp10_common"}
    ]},
    {build_tools, ["make", "rebar3"]},
    {files, [
        "erlang.mk",
        "git-revisions.txt",
        "include",
        "LICENSE*",
        "Makefile",
        "rabbitmq-components.mk",
        "README",
        "README.md",
        "mk"
    ]}
"""

rabbitmq_app(
    app_description = "Modules shared by rabbitmq-amqp1.0 and rabbitmq-amqp1.0-client",
    app_extra_keys = APP_EXTRA_KEYS,
    app_name = "amqp10_common",
    extra_hdrs = ["include/amqp10_framing.hrl"],
    extra_srcs = ["src/amqp10_framing0.erl"],
)

xref()

dialyze(
    plt = "//:base_plt",
)

suites = [
    rabbitmq_suite(
        name = "binary_generator_SUITE",
    ),
    rabbitmq_suite(
        name = "binary_parser_SUITE",
    ),
]

assert_suites(
    suites,
    glob(["test/**/*_SUITE.erl"]),
)
